diff --git a/app/views/hats/_hat_rule.html.erb b/app/views/hats/_hat_rule.html.erb
index 61bf65b..a4eb741 100644
--- a/app/views/hats/_hat_rule.html.erb
+++ b/app/views/hats/_hat_rule.html.erb
@@ -1,3 +1,4 @@
 <% box :location => :left, :title_class => hat_rule.color, :title => hat_rule.color + " Hat", :subtitle => hat_rule.summary do %>
 <%= Markdown.new(hat_rule.more_info).to_html %>
-<% end %>
\ No newline at end of file
+<%= link_to "[edit]", edit_hat_url( hat_rule ) %>
+<% end %>
diff --git a/app/views/layouts/application.html.erb b/app/views/layouts/application.html.erb
index 4eac5cf..4d3a4a7 100644
--- a/app/views/layouts/application.html.erb
+++ b/app/views/layouts/application.html.erb
@@ -10,10 +10,10 @@
 		<div class="header_right">
 			<div class="top_info">
 				<div class="top_info_right">
-					<% if @current_user %>
+					<% if logged_in? %>
 						<p><%= link_to_current_user %></p>
 					<% else %>
-						<p><b>You are not Logged in!</b> <a href="#">Log in</a>  or <a href="#">register</a> to start thinking together!</p>
+						<p><b>You are not logged in!</b> <%= link_to "Log in", login_path %> or <%= link_to "register", register_path %> to start thinking together!</p>
 					<% end %>
 				</div>		
 			</div>
@@ -74,5 +74,6 @@
 			&copy; Copyright 2006 Internet Music, Design: Luka Cvrk - <a href="http://www.solucija.com/" title="What's your solution?">Solucija</a></p>
 		</div>
 	</div>
+	<pre><%= session.to_yaml %></pre>
 </body>
 </html>
\ No newline at end of file
diff --git a/lib/authenticated_system.rb b/lib/authenticated_system.rb
index cdaf8ef..cd276d4 100644
--- a/lib/authenticated_system.rb
+++ b/lib/authenticated_system.rb
@@ -10,6 +10,7 @@ module AuthenticatedSystem
     # Future calls avoid the database because nil is not equal to false.
     def current_user
       @current_user ||= (login_from_session || login_from_basic_auth || login_from_cookie) unless @current_user == false
+	return @current_user
     end
 
     # Store the given user id in the session.
diff --git a/spec/helpers/application_helper_spec.rb b/spec/helpers/application_helper_spec.rb
index 6861e6e..a0250c1 100644
--- a/spec/helpers/application_helper_spec.rb
+++ b/spec/helpers/application_helper_spec.rb
@@ -73,7 +73,6 @@ describe ApplicationHelper do
 		end
 		it "should highlight the shortcut key" do
 			@result.should have_tag("span.shortcut", "A")
-			puts @result
 		end
 	end
   end  
diff --git a/spec/views/hats/index.html.erb_spec.rb b/spec/views/hats/index.html.erb_spec.rb
index 1057fad..3730a65 100644
--- a/spec/views/hats/index.html.erb_spec.rb
+++ b/spec/views/hats/index.html.erb_spec.rb
@@ -2,7 +2,7 @@ require File.expand_path(File.dirname(__FILE__) + '/../../spec_helper')
 
 describe "/hats/index.html.erb" do
   include HatsHelper
-  
+  include UsersHelper  
   before(:each) do
     assigns[:hats] = [
       stub_model(Hat,
@@ -14,6 +14,36 @@ describe "/hats/index.html.erb" do
         :summary => "value for summary"
       )
     ]
+    @user = stub_model( User );
+  end
+
+  describe "layout" do
+
+	it "should do better than this :("	
+	[true, false]
+	[].each do |state|
+		in_or_not = state ? "logged in" : "not logged in"
+
+		describe "when user is #{in_or_not}" do
+			before :each do
+				debugger
+				render '/hats/index.html.erb', :layout => 'application.html.erb'
+				assigns[:current_user] = state ? @user : nil
+			# this breaks things :(
+			#	stub!( :logged_in? ).any_number_of_times.and_return( state );
+			end
+			it "should #{state ? 'not' : ''} link to the login and register page" do
+				debugger
+				if( state ) then
+					response.should_not have_tag( "a[href=#{login_path}]" )
+					response.should_not have_tag( "a[href=#{register_path}]" )
+				else
+					response.should     have_tag( "a[href=#{login_path}]" )
+					response.should     have_tag( "a[href=#{register_path}]" )
+				end
+			end
+		end
+	end
   end
 
   it "should render list of hats" do
diff --git a/spec/views/hats/rules.html.erb b/spec/views/hats/rules.html.erb
index b84728e..6759907 100644
--- a/spec/views/hats/rules.html.erb
+++ b/spec/views/hats/rules.html.erb
@@ -6,11 +6,13 @@ describe "/hats/rules.html.erb" do
   before(:each) do
     assigns[:hats] = [
       stub_model(Hat,
+	:id => '42',
         :color => "value for color",
         :summary => "value for summary",
 	:more_info => "value for more info\n\nadditional info\n\n* bullet"
       ),
       stub_model(Hat,
+	:id => '43',
         :color => "value for color",
         :summary => "value for summary",
 	:more_info => "* b1\n* b2\n* b3"
@@ -41,6 +43,8 @@ describe "/hats/rules.html.erb" do
     content_for(:left).should have_tag("ul>li", "b1")
     content_for(:left).should have_tag("ul>li", "b2")
     content_for(:left).should have_tag("ul>li", "b3")
+    content_for(:left).should have_tag("a[href=#{edit_hat_url( 42 )}]" )
+    content_for(:left).should have_tag("a[href=#{edit_hat_url( 43 )}]" )
   end
 
 end
diff --git a/spec/views/home/index.html.erb_spec.rb b/spec/views/home/index.html.erb_spec.rb
index f263f9b..e1b0d5c 100644
--- a/spec/views/home/index.html.erb_spec.rb
+++ b/spec/views/home/index.html.erb_spec.rb
@@ -11,6 +11,7 @@ describe "/home/index" do
   end
 end
 
+
 describe "shared partials:" do
   describe "shared/_box.erb" do
 	def partial( *args ) 
